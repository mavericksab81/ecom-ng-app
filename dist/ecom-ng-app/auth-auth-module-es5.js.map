{"version":3,"sources":["webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html"],"names":["routes","path","children","redirectTo","component","AuthModule","forFeature","forChild","declarations","imports","LoginComponent","store","loginForm","email","required","password","value","dispatch","status","onLoginSubmit","selector","templateUrl","styleUrls","SignupComponent","signUpForm","valid","onSignUpSubmit"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { AuthEffects } from './state/auth.effects';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', redirectTo: 'login' },\n      { path: 'login', component: LoginComponent },\n      { path: 'signup', component: SignupComponent },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    EffectsModule.forFeature(),\n    RouterModule.forChild(routes),\n  ],\n})\nexport class AuthModule {}\n","import { setLoadingSpinner } from './../../store/Shared/shared.actions';\nimport { loginStart } from './../state/auth.actions';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.state';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n  onLoginSubmit() {\n    const email = this.loginForm.value.email;\n    const password = this.loginForm.value.password;\n    this.store.dispatch(setLoadingSpinner({ status: true }));\n    this.store.dispatch(loginStart({ email, password }));\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-md-3\">\n    <h3>Login</h3>\n    <hr />\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLoginSubmit()\">\n      <div class=\"mb-3\">\n        <label>Email</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"email\" />\n        <div\n          *ngIf=\"\n            loginForm.get('email').touched && !loginForm.get('email').valid\n          \"\n        >\n          <div *ngIf=\"loginForm.get('email').errors.required\">\n            Email is required\n          </div>\n          <div *ngIf=\"loginForm.get('email').errors.email\">Invalid Email</div>\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          formControlName=\"password\"\n        />\n        <div\n          *ngIf=\"\n            loginForm.get('password').touched &&\n            !loginForm.get('password').valid\n          \"\n        >\n          <div>Password is required</div>\n        </div>\n      </div>\n\n      <div class=\"mb-3\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"!loginForm.valid\"\n        >\n          Login\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { signupStart } from './../state/auth.actions';\nimport { setLoadingSpinner } from './../../store/Shared/shared.actions';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.state';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  signUpForm: FormGroup;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.signUpForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n\n  onSignUpSubmit() {\n    if (!this.signUpForm.valid) {\n      return;\n    }\n    const email = this.signUpForm.value.email;\n    const password = this.signUpForm.value.password;\n    this.store.dispatch(setLoadingSpinner({ status: true }));\n    this.store.dispatch(signupStart({ email, password }));\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n      <h3>SignUp</h3>\n      <hr />\n      <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSignUpSubmit()\">\n        <div class=\"mb-3\">\n          <label>Email</label>\n          <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n          <div\n            *ngIf=\"\n              signUpForm.get('email').touched && !signUpForm.get('email').valid\n            \"\n          >\n            <div *ngIf=\"signUpForm.get('email').errors.required\">\n              Email is required\n            </div>\n            <div *ngIf=\"signUpForm.get('email').errors.email\">\n              Invalid Email\n            </div>\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            formControlName=\"password\"\n          />\n          <div\n            *ngIf=\"\n              signUpForm.get('password').touched &&\n              !signUpForm.get('password').valid\n            \"\n          >\n            <div>Password is required</div>\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"!signUpForm.valid\"\n          >\n            SignUp\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]}