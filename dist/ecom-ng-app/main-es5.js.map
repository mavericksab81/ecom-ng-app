{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/state/auth.actions.ts","webpack:///src/app/auth/state/auth.effects.ts","webpack:///src/app/auth/state/auth.reducer.ts","webpack:///src/app/auth/state/auth.selector.ts","webpack:///src/app/auth/state/auth.state.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/models/user.model.ts","webpack:///src/app/posts/single-post/single-post.component.ts","webpack:///src/app/posts/single-post/single-post.component.html","webpack:///src/app/posts/state/posts.selector.ts","webpack:///src/app/posts/state/posts.state.ts","webpack:///src/app/services/AuthToken.interceptor.ts","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/loading-spinner/loading-spinner.component.ts","webpack:///src/app/shared/components/loading-spinner/loading-spinner.component.html","webpack:///src/app/store/Shared/shared.actions.ts","webpack:///src/app/store/Shared/shared.reducer.ts","webpack:///src/app/store/Shared/shared.selector.ts","webpack:///src/app/store/Shared/shared.state.ts","webpack:///src/app/store/app.state.ts","webpack:///src/app/store/router/custom-serializer.ts","webpack:///src/app/store/router/router.selector.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","PostsModule","canActivate","AuthModule","AppRoutingModule","forRoot","imports","AppComponent","store","title","showLoading","select","errorMessage","dispatch","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","instrument","logOnly","production","serializer","declarations","providers","bootstrap","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_START","SIGNUP_SUCCESS","AUTO_LOGIN_ACTION","LOGOUT_ACTION","loginStart","loginSuccess","signupStart","signupSuccess","autoLogin","autoLogout","dummyAction","AuthEffects","actions$","authService","router","login$","pipe","action","login","email","password","data","status","message","user","formatUser","setUserInLocalStorage","redirect","errResp","getErrorMessage","error","loginRedirect$","navigate","signUp$","signUp","autoLogin$","getUserFromLocalStorage","logout$","logout","_authReducer","state","AuthReducer","AUTH_STATE_NAME","getAuthState","isAuthenticated","getToken","userToken","initialState","HomeComponent","User","token","localId","expirationDate","SinglePostComponent","post","POST_STATE_NAME","getPostsState","postsSelectors","getSelectors","getPosts","selectAll","getPostEntities","selectEntities","getPostById","posts","route","params","getCount","count","postsAdapter","sortComparer","sortByName","getInitialState","a","b","compare","localeCompare","AuthTokenInterceptor","next","handle","modifiedReq","clone","append","AuthGuard","authenticate","createUrlTree","providedIn","AuthService","http","FIRBASE_API_KEY","returnSecureToken","Date","getTime","expiresIn","idToken","localStorage","setItem","JSON","stringify","runTimeoutInterval","todaysDate","expireDate","timeInterval","timeoutInterval","setTimeout","userDataString","getItem","userData","parse","removeItem","clearTimeout","HeaderComponent","event","preventDefault","LoadingSpinnerComponent","SET_LOADING_ACTION","SET_ERROR_MESSAGE","setLoadingSpinner","setErrorMessage","_sharedReducer","SharedReducer","SHARED_STATE_NAME","getSharedState","getLoading","appReducer","CustomSerializer","routerState","root","firstChild","url","queryParams","getRouterState","getCurrentRoute","environment","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { SinglePostComponent } from './posts/single-post/single-post.component';\nimport { AuthGuard } from './services/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'posts',\n    loadChildren: () =>\n      import('./posts/posts.module').then((m) => m.PostsModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'posts/details/:id',\n    component: SinglePostComponent,\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { getLoading, getErrorMessage } from './store/Shared/shared.selector';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './store/app.state';\nimport { autoLogin } from './auth/state/auth.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'ecom-ng-app';\n  showLoading: Observable<boolean>;\n  errorMessage: Observable<string>;\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit() {\n    this.showLoading = this.store.select(getLoading);\n    this.errorMessage = this.store.select(getErrorMessage);\n    this.store.dispatch(autoLogin());\n  }\n}\n","<app-header></app-header>\n<app-loading-spinner *ngIf=\"showLoading | async\"></app-loading-spinner>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"alert alert-danger\" *ngIf=\"errorMessage | async as error\">\n        {{ error }}\n      </div>\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { CustomSerializer } from './store/router/custom-serializer';\nimport { AuthTokenInterceptor } from './services/AuthToken.interceptor';\nimport { AuthEffects } from './auth/state/auth.effects';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { EffectsModule } from '@ngrx/effects';\nimport { appReducer } from './store/app.state';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { environment } from 'src/environments/environment';\nimport { LoadingSpinnerComponent } from './shared/components/loading-spinner/loading-spinner.component';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    LoadingSpinnerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    EffectsModule.forRoot([AuthEffects]),\n    StoreModule.forRoot(appReducer),\n    StoreDevtoolsModule.instrument({\n      logOnly: environment.production,\n    }),\n    StoreRouterConnectingModule.forRoot({\n      serializer: CustomSerializer,\n    }),\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthTokenInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { User } from './../../models/user.model';\nimport { createAction, props } from '@ngrx/store';\nexport const LOGIN_START = '[auth page] login start';\nexport const LOGIN_SUCCESS = '[auth page] login Success';\nexport const LOGIN_FAIL = '[auth page] login Fail';\n\nexport const SIGNUP_START = '[auth page] signup start';\nexport const SIGNUP_SUCCESS = '[auth page] signup success';\nexport const AUTO_LOGIN_ACTION = '[auth page] auto login';\nexport const LOGOUT_ACTION = '[auth page] logout';\n\nexport const loginStart = createAction(\n  LOGIN_START,\n  props<{ email: string; password: string }>()\n);\nexport const loginSuccess = createAction(\n  LOGIN_SUCCESS,\n  props<{ user: User; redirect: boolean }>()\n);\n\nexport const signupStart = createAction(\n  SIGNUP_START,\n  props<{ email: string; password: string }>()\n);\n\nexport const signupSuccess = createAction(\n  SIGNUP_SUCCESS,\n  props<{ user: User; redirect: boolean }>()\n);\n\nexport const autoLogin = createAction(AUTO_LOGIN_ACTION);\nexport const autoLogout = createAction(LOGOUT_ACTION);\nexport const dummyAction = createAction('[dummy action]');\n","import {\n  setLoadingSpinner,\n  setErrorMessage,\n} from './../../store/Shared/shared.actions';\nimport { AuthService } from './../../services/auth.service';\nimport { exhaustMap, map, catchError, tap, mergeMap } from 'rxjs/operators';\nimport {\n  autoLogin,\n  autoLogout,\n  loginStart,\n  loginSuccess,\n  signupStart,\n  signupSuccess,\n} from './auth.actions';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.state';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private store: Store<AppState>,\n    private router: Router\n  ) {}\n\n  login$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(loginStart),\n      exhaustMap((action) => {\n        return this.authService.login(action.email, action.password).pipe(\n          map((data) => {\n            this.store.dispatch(setLoadingSpinner({ status: false }));\n            this.store.dispatch(setErrorMessage({ message: '' }));\n            const user = this.authService.formatUser(data);\n            this.authService.setUserInLocalStorage(user);\n            return loginSuccess({ user, redirect: true });\n          }),\n          catchError((errResp) => {\n            this.store.dispatch(setLoadingSpinner({ status: false }));\n            const errorMessage = this.authService.getErrorMessage(\n              errResp.error.error.message\n            );\n            return of(setErrorMessage({ message: errorMessage }));\n          })\n        );\n      })\n    );\n  });\n\n  loginRedirect$ = createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(...[loginSuccess, signupSuccess]),\n        tap((action) => {\n          this.store.dispatch(setErrorMessage({ message: '' }));\n          if (action.redirect) {\n            this.router.navigate(['/']);\n          }\n        })\n      );\n    },\n    { dispatch: false }\n  );\n\n  signUp$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(signupStart),\n      exhaustMap((action) => {\n        return this.authService.signUp(action.email, action.password).pipe(\n          map((data) => {\n            this.store.dispatch(setLoadingSpinner({ status: false }));\n            const user = this.authService.formatUser(data);\n            this.authService.setUserInLocalStorage(user);\n            return signupSuccess({ user, redirect: true });\n          }),\n          catchError((errResp) => {\n            this.store.dispatch(setLoadingSpinner({ status: false }));\n            const errorMessage = this.authService.getErrorMessage(\n              errResp.error.error.message\n            );\n            return of(setErrorMessage({ message: errorMessage }));\n          })\n        );\n      })\n    );\n  });\n\n  autoLogin$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(autoLogin),\n      mergeMap((action) => {\n        const user = this.authService.getUserFromLocalStorage();\n        return of(loginSuccess({ user, redirect: false }));\n      })\n    );\n  });\n\n  logout$ = createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(autoLogout),\n        map((action) => {\n          this.authService.logout();\n          this.router.navigate(['auth']);\n        })\n      );\n    },\n    { dispatch: false }\n  );\n}\n","import { loginSuccess, signupSuccess, autoLogout } from './auth.actions';\nimport { createReducer, on } from '@ngrx/store';\nimport { initialState } from './auth.state';\n\nconst _authReducer = createReducer(\n  initialState,\n  on(loginSuccess, (state, action) => {\n    return {\n      ...state,\n      user: action.user,\n    };\n  }),\n  on(signupSuccess, (state, action) => {\n    return {\n      ...state,\n      user: action.user,\n    };\n  }),\n  on(autoLogout, (state) => {\n    return {\n      ...state,\n      user: null,\n    };\n  })\n);\n\nexport function AuthReducer(state, action) {\n  return _authReducer(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { AuthState } from './auth.state';\nexport const AUTH_STATE_NAME = 'auth';\n\nconst getAuthState = createFeatureSelector<AuthState>(AUTH_STATE_NAME);\n\nexport const isAuthenticated = createSelector(getAuthState, (state) => {\n  return state.user ? true : false;\n});\n\nexport const getToken = createSelector(getAuthState, (state) => {\n  return state.user ? state.user.userToken : null;\n});\n","import { User } from './../../models/user.model';\nexport interface AuthState {\n  user: User | null;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","export class User {\n  constructor(\n    private email: string,\n    private token: string,\n    private localId: string,\n    private expirationDate: Date\n  ) {}\n\n  get expireDate() {\n    return this.expirationDate;\n  }\n\n  get userToken() {\n    return this.token;\n  }\n}\n","import { getPostById } from './../state/posts.selector';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './../../store/app.state';\nimport { Post } from './../../models/posts.model';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-single-post',\n  templateUrl: './single-post.component.html',\n  styleUrls: ['./single-post.component.css'],\n})\nexport class SinglePostComponent implements OnInit {\n  post: Observable<Post>;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.post = this.store.select(getPostById);\n  }\n}\n","<div>PostDetails</div>\n<div *ngIf=\"post | async as postData\">\n  <div>Id: {{ postData.id }}</div>\n  <div>Title: {{ postData.title }}</div>\n  <div>Description: {{ postData.description }}</div>\n</div>\n<div><a [routerLink]=\"['/posts']\">Back to posts</a></div>\n","import { RouterStateUrl } from './../../store/router/custom-serializer';\nimport { getCurrentRoute } from './../../store/router/router.selector';\nimport { postsAdapter, PostsState } from './posts.state';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { RouterState } from '@angular/router';\n\nexport const POST_STATE_NAME = 'posts';\nconst getPostsState = createFeatureSelector<PostsState>(POST_STATE_NAME);\nexport const postsSelectors = postsAdapter.getSelectors();\n\nexport const getPosts = createSelector(getPostsState, postsSelectors.selectAll);\nexport const getPostEntities = createSelector(\n  getPostsState,\n  postsSelectors.selectEntities\n);\n\nexport const getPostById = createSelector(\n  getPostEntities,\n  getCurrentRoute,\n  (posts, route: RouterStateUrl) => {\n    return posts ? posts[route.params['id']] : null;\n  }\n);\n\nexport const getCount = createSelector(getPostsState, (state) => state.count);\n","import { EntityState, createEntityAdapter } from '@ngrx/entity';\nimport { Post } from './../../models/posts.model';\n\nexport interface PostsState extends EntityState<Post> {\n  count: number;\n}\n\nexport const postsAdapter = createEntityAdapter<Post>({\n  sortComparer: sortByName,\n});\n\nexport const initialState: PostsState = postsAdapter.getInitialState({\n  count: 0,\n});\n\nexport function sortByName(a: Post, b: Post): number {\n  const compare = a.title.localeCompare(b.title);\n  if (compare > 0) {\n    return -1;\n  }\n\n  if (compare < 0) {\n    return 1;\n  }\n\n  return compare;\n}\n","import { exhaustMap, take } from 'rxjs/operators';\nimport { getToken } from './../auth/state/auth.selector';\nimport { AppState } from './../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpEvent,\n  HttpHandler,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  constructor(private store: Store<AppState>) {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return this.store.select(getToken).pipe(\n      take(1),\n      exhaustMap((token) => {\n        if (!token) {\n          return next.handle(req);\n        }\n        let modifiedReq = req.clone({\n          params: req.params.append('auth', token),\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n","import { exhaustMap, map } from 'rxjs/operators';\nimport { AppState } from './../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { isAuthenticated } from '../auth/state/auth.selector';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store<AppState>, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree> {\n    return this.store.select(isAuthenticated).pipe(\n      map((authenticate) => {\n        if (!authenticate) {\n          return this.router.createUrlTree(['auth']);\n        }\n        return true;\n      })\n    );\n  }\n}\n","import { User } from './../models/user.model';\nimport { Observable } from 'rxjs';\nimport { AuthResponseData } from './../models/AuthResponseData.model';\nimport { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AppState } from '../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { autoLogout } from '../auth/state/auth.actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  timeoutInterval: any;\n  constructor(private http: HttpClient, private store: Store<AppState>) {}\n\n  login(email: string, password: string): Observable<AuthResponseData> {\n    return this.http.post<AuthResponseData>(\n      `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.FIRBASE_API_KEY}`,\n      { email, password, returnSecureToken: true }\n    );\n  }\n\n  signUp(email: string, password: string): Observable<AuthResponseData> {\n    return this.http.post<AuthResponseData>(\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${environment.FIRBASE_API_KEY}`,\n      { email, password, returnSecureToken: true }\n    );\n  }\n\n  formatUser(data: AuthResponseData) {\n    const expirationDate = new Date(\n      new Date().getTime() + +data.expiresIn * 1000\n    );\n    const user = new User(\n      data.email,\n      data.idToken,\n      data.localId,\n      expirationDate\n    );\n    return user;\n  }\n\n  getErrorMessage(message: string) {\n    switch (message) {\n      case 'EMAIL_NOT_FOUND':\n        return 'Email Not Found';\n      case 'INVALID_PASSWORD':\n        return 'Invalid Password';\n      case 'EMAIL_EXISTS':\n        return 'Email already exists';\n      default:\n        return 'Unknown error occurred. Please try again';\n    }\n  }\n\n  setUserInLocalStorage(user: User) {\n    localStorage.setItem('userData', JSON.stringify(user));\n\n    this.runTimeoutInterval(user);\n  }\n\n  runTimeoutInterval(user: User) {\n    const todaysDate = new Date().getTime();\n    const expirationDate = user.expireDate.getTime();\n    const timeInterval = expirationDate - todaysDate;\n\n    this.timeoutInterval = setTimeout(() => {\n      this.store.dispatch(autoLogout());\n      //logout functionality or get the refresh token\n    }, timeInterval);\n  }\n\n  getUserFromLocalStorage() {\n    const userDataString = localStorage.getItem('userData');\n    if (userDataString) {\n      const userData = JSON.parse(userDataString);\n      const expirationDate = new Date(userData.expirationDate);\n      const user = new User(\n        userData.email,\n        userData.token,\n        userData.localId,\n        expirationDate\n      );\n      this.runTimeoutInterval(user);\n      return user;\n    }\n    return null;\n  }\n\n  logout() {\n    localStorage.removeItem('userData');\n    if (this.timeoutInterval) {\n      clearTimeout(this.timeoutInterval);\n      this.timeoutInterval = null;\n    }\n  }\n}\n","import { AuthService } from './../../../services/auth.service';\nimport { isAuthenticated } from './../../../auth/state/auth.selector';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { AppState } from 'src/app/store/app.state';\nimport { Store } from '@ngrx/store';\nimport { autoLogout } from 'src/app/auth/state/auth.actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  isAuthenticated: Observable<boolean>;\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.isAuthenticated = this.store.select(isAuthenticated);\n  }\n\n  onLogout(event: Event) {\n    event.preventDefault();\n    this.store.dispatch(autoLogout());\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link active\"\n            aria-current=\"page\"\n            href=\"#\"\n            [routerLink]=\"['/']\"\n            >Home</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\" [routerLink]=\"['/posts']\">Posts</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!(isAuthenticated | async)\">\n          <a class=\"nav-link\" href=\"#\" [routerLink]=\"['/auth']\">Login</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!(isAuthenticated | async)\">\n          <a class=\"nav-link\" href=\"#\" [routerLink]=\"['/auth/signup']\"\n            >Signup</a\n          >\n        </li>\n        <li class=\"nav-item\" *ngIf=\"isAuthenticated | async\">\n          <a class=\"nav-link\" href=\"#\" (click)=\"onLogout($event)\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"backdrop\"></div>\n<div class=\"loading-spinner\">\n  <div class=\"lds-roller\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n  <div>Loading Data</div>\n</div>\n","import { createAction, props } from '@ngrx/store';\nexport const SET_LOADING_ACTION = '[shared state] set loading spinner';\nexport const SET_ERROR_MESSAGE = '[shared state] set error message';\n\nexport const setLoadingSpinner = createAction(\n  SET_LOADING_ACTION,\n  props<{ status: boolean }>()\n);\n\nexport const setErrorMessage = createAction(\n  SET_ERROR_MESSAGE,\n  props<{ message: string }>()\n);\n","import { setLoadingSpinner, setErrorMessage } from './shared.actions';\nimport { createReducer, on } from '@ngrx/store';\nimport { initialState } from './shared.state';\n\nconst _sharedReducer = createReducer(\n  initialState,\n  on(setLoadingSpinner, (state, action) => {\n    return {\n      ...state,\n      showLoading: action.status,\n    };\n  }),\n  on(setErrorMessage, (state, action) => {\n    return {\n      ...state,\n      errorMessage: action.message,\n    };\n  })\n);\n\nexport function SharedReducer(state, action) {\n  return _sharedReducer(state, action);\n}\n","import { SharedState } from './shared.state';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nexport const SHARED_STATE_NAME = 'shared';\n\nconst getSharedState = createFeatureSelector<SharedState>(SHARED_STATE_NAME);\n\nexport const getLoading = createSelector(getSharedState, (state) => {\n  return state.showLoading;\n});\n\nexport const getErrorMessage = createSelector(getSharedState, (state) => {\n  return state.errorMessage;\n});\n","export interface SharedState {\n  showLoading: boolean;\n  errorMessage: string;\n}\n\nexport const initialState: SharedState = {\n  showLoading: false,\n  errorMessage: '',\n};\n","import { AUTH_STATE_NAME } from './../auth/state/auth.selector';\nimport { SharedState } from './Shared/shared.state';\nimport { SHARED_STATE_NAME } from './Shared/shared.selector';\nimport { SharedReducer } from './Shared/shared.reducer';\nimport { AuthReducer } from './../auth/state/auth.reducer';\nimport { AuthState } from '../auth/state/auth.state';\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\n\nexport interface AppState {\n  [SHARED_STATE_NAME]: SharedState;\n  [AUTH_STATE_NAME]: AuthState;\n  router: RouterReducerState;\n}\n\nexport const appReducer = {\n  [SHARED_STATE_NAME]: SharedReducer,\n  [AUTH_STATE_NAME]: AuthReducer,\n  router: routerReducer,\n};\n","import { RouterStateSerializer } from '@ngrx/router-store';\nimport { Params, RouterStateSnapshot } from '@angular/router';\n\nexport interface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const {\n      url,\n      root: { queryParams },\n    } = routerState;\n    const { params } = route;\n\n    // Only return an object including the URL, params and query params\n    // instead of the entire snapshot\n    return { url, params, queryParams };\n  }\n}\n","import { RouterStateUrl } from './custom-serializer';\nimport { RouterReducerState } from '@ngrx/router-store';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nexport const getRouterState = createFeatureSelector<\n  RouterReducerState<RouterStateUrl>\n>('router');\n\nexport const getCurrentRoute = createSelector(getRouterState, (router) => {\n  return router.state;\n});\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  FIRBASE_API_KEY: 'AIzaSyAtUR5ZtxooTSe4kFfsA4OI2Vade9PRHAk',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}